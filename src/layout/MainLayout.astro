---
const { title } = Astro.props;
import "../styles/global.scss";
import "../styles/themes.scss";
import "../styles/mixins.scss";
import Header from "../components/Header.astro";
import SideNav from "../components/SideNav.astro";
import HamburgerMenu from "../components/HamburgerMenu.astro";
// import ShootingStars from "../components/animations/ShootingStars.astro";
import Firefly from "../components/animations/Firefly.astro";
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <!-- <link rel="icon" type="image/svg+xml" href="/icons/icon_512.png" /> -->
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta
      name="keywords"
      content="projects, idea , bank,PIB, Idea Arca,ideas, archive "
    />
    <meta name="theme-color" content="#5f5eaa" />
    <link rel="icon" href="/icons/icon_512.png" />
    <link rel="manifest" href="/manifest.json" />
    <link rel="shortcut icon" href="/icons/icon_512.png" />
    <link rel="apple-touch-icon" href="/icons/icon_512.png" /><link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"
      integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    /><meta
      name="description"
      content="Idea Arca (Latin: 'Idea Vault') is a Project Idea Bank. Unleash your
    tech creativity. Discover, collaborate, and bring to life innovative
    project ideas in various tech fields through this inspirational
    repository."
    /><title>{title}</title></head
  >

  <body>
    <!--grid style -->
    <div class="body">
      <!--top gradient style -->
      <div class="grains"></div>
      <!--grain style -->
      <div class="top-body">
        <!-- Animations -->
        <!-- <ShootingStars /> -->
        <Firefly />
        <!--Main Content -->
        <Header />
        <div class="main">
          <SideNav />
          <HamburgerMenu />
          <div class="hamBar">
            <i class="fa-solid fa-bars ham"></i>
            <i class="fa-solid fa-xmark cross"></i>
          </div>
          <div class="scroll-to-top btn" id="scrollToTopButton">
            <i class="fa-solid fa-angles-up fa-bounce"></i>
          </div>
          <slot>
            <main>
              This is the default slot, which will be used if no other slots are
              defined in your component's template! Hello, world!
            </main>
          </slot>
        </div>
      </div>
    </div>
  </body>

  <style lang="scss">
    body {
      height: 100vh;
      width: 100vw;
      // background: var(--primary-1);
      color: var(--primary-3);
      overflow: hidden;
      background-image: linear-gradient(
          var(--primary-3) 1.5px,
          transparent 1.5px
        ),
        linear-gradient(to right, var(--primary-3) 1.5px, transparent 1.5px);
      background-size: 40px 40px;
      background-color: var(--primary-1);

      .body {
        position: relative;
        height: 100vh;
        width: 100vw;
        // background: var(--primary-1);
        color: var(--primary-3);
        overflow: hidden;
        background: radial-gradient(
          circle at top,
          var(--gradient),
          var(--sidenav)
        );
        .top-body {
          position: absolute;
          top: 0;
          left: 0;
          height: 100vh;
          width: 100vw;
          z-index: 2;
          .main {
            .hamBar {
              position: absolute;
              top: 0;
              right: 0;
              padding: 1rem;
              display: none;
              .cross {
                display: none;
              }
            }
          }
        }
        .grains {
          position: absolute;
          top: 0;
          left: 0;
          height: 100vh;
          width: 100vw;
          background-image: radial-gradient(
              var(--primary-2) 1px,
              transparent 1px
            ),
            radial-gradient(var(--primary-2) 1px, transparent 1px);
          background-size: 32px 32px;
          background-position: 0 0, 16px 16px;
          background-color: rgba(0, 0, 0, 0);
          z-index: 1;
          opacity: 0.7;
        }
      }
    }

    @media (max-width: 800px) {
      body {
        .body {
          .top-body {
            .main {
              .hamBar {
                display: block;
                z-index: 100;
              }
            }
          }
        }
      }
    }
  </style>

  <script>
    // Hamburger
    const HamburgerMenu = document.querySelector(".HamburgerMenu");
    const Ham = document.querySelector(".ham");
    const Cross = document.querySelector(".cross");
    const HamBar = document.querySelector(".hamBar");

    var count = 0;
    function handleHamClick() {
      if (count % 2 == 0) {
        HamburgerMenu.classList.remove("hide");
        HamburgerMenu.classList.add("show");
        Ham.style.display = "none";
        Cross.style.display = "block";
      } else {
        HamburgerMenu.classList.remove("show");
        HamburgerMenu.classList.add("hide");
        Cross.style.display = "none";
        Ham.style.display = "block";
      }
      console.log(count);
      count++;
    }

    HamBar.addEventListener("click", handleHamClick);

    // session storage - Background Animations
    // uncomment for dynamic animations
    // const animationNo = 2; // update it after every new animation
    // const Animations = ["ShootingStars", "Firefly"];
    // let animation = sessionStorage.getItem("animationIndex");
    // if (animation === null) {
    //   let val = Math.round(Math.random() * (animationNo - 1));
    //   sessionStorage.setItem("animationIndex", JSON.stringify(val));
    //   const ele = document.querySelector(`.${Animations[val]}`);
    //   ele.style.display = "block";
    // } else {
    //   const ele = document.querySelector(`.${Animations[JSON.parse(animation)]}`);
    //   ele.style.display = "block";
    // }
  </script>
  <script>
    const scrollToTopButton = document.getElementById("scrollToTopButton");
    const main = document.querySelector("main");
    const details = document.querySelector(".details");

    // Add a click event listener to scroll to the top when the button is clicked
    scrollToTopButton.addEventListener("click", () => {
      main !== null &&
        main.scrollTo({
          top: 0,
          behavior: "smooth", // This enables smooth scrolling
        });
      details !== null &&
        details.scrollTo({
          top: 0,
          behavior: "smooth", // This enables smooth scrolling
        });
    });
    if (main !== null) {
      main.addEventListener("scroll", () => {
        if (main.scrollTop > 50) {
          scrollToTopButton.classList.add("show");
        } else {
          scrollToTopButton.classList.remove("show");
        }
      });
    }
    if (details !== null) {
      details.addEventListener("scroll", () => {
        if (details.scrollTop > 50) {
          scrollToTopButton.classList.add("show");
        } else {
          scrollToTopButton.classList.remove("show");
        }
      });
    }
  </script>
</html>
